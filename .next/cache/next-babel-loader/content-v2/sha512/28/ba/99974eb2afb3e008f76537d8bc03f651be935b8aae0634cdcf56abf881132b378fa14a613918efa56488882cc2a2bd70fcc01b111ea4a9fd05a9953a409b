{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* In our app, we'll use a common style across various pages. For this purpose, we can create a common Layout component and use it for each of our pages. Here's an example: \r\n\r\nSince Next.js is used to create server-rendered pages, adding a link using a normal <a> tag would cause a link that would be navigated to via the server. \r\nThis is obviously not always necessary. \r\nTo support client-side navigation (this takes place in the browser, without making a request to the server) we use Next.jsâ€™ Link API.*/\nimport Link from \"next/link\";\n/*You can use this built-in component to append elements to the <head> element of the page. More info here: https://github.com/zeit/next.js/#populating-head \r\nNotice that we add the link for the stylesheet for using React-Bootstrap components to the <Head>. */\n\nimport Head from \"next/head\";\nimport Header from \"./Header\"; // import Footer from \"./Footer\";\n\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: \"1px solid #DDD\"\n}; //website layout\n\nconst Layout = props => /*#__PURE__*/_jsxs(\"div\", {\n  children: [/*#__PURE__*/_jsx(Head, {\n    children: /*#__PURE__*/_jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossorigin: \"anonymous\"\n    })\n  }), /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Header, {}), props.children]\n  })]\n});\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}